### Welcome to the InfluxDB configuration file.

# The values in this file override the default values used by the system if
# a config option is not specified. The commented out lines are the configuration
# field and the default value used. Uncommenting a line and changing the value
# will change the value used at runtime when the process is restarted.

# Once every 24 hours InfluxDB will report usage data to usage.influxdata.com
# The data includes a random ID, os, arch, version, the number of series and other
# usage data. No data from user databases is ever transmitted.
# Change this option to true to disable reporting.
reporting-disabled = {{ influxdb_reporting_disabled | lower }}

# Bind address to use for the RPC service for backup and restore.
bind-address = "{{ influxdb_bind_address }}"

###
### [meta]
###
### Controls the parameters for the Raft consensus group that stores metadata
### about the InfluxDB cluster.
###

[meta]
  # Where the metadata/raft database is stored
  dir = "{{ influxdb_meta_dir }}"

  # Automatically create a default retention policy when creating a database.
  retention-autocreate = {{ influxdb_meta_retention_autocreate | lower }}

  # If log messages are printed for the meta service
  logging-enabled = true

###
### [data]
###
### Controls where the actual shard data for InfluxDB lives and how it is
### flushed from the WAL. "dir" may need to be changed to a suitable place
### for your system, but the WAL settings are an advanced configuration. The
### defaults should work for most systems.
###

[data]
  # The directory where the TSM storage engine stores TSM files.
  dir = "{{ influxdb_data_dir }}"

  # The directory where the TSM storage engine stores WAL files.
  wal-dir = "{{ influxdb_data_wal_dir }}"

  # The amount of time that a write will wait before fsyncing.  A duration
  # greater than 0 can be used to batch up multiple fsync calls.  This is useful for slower
  # disks or when WAL write contention is seen.  A value of 0s fsyncs every write to the WAL.
  # Values in the range of 0-100ms are recommended for non-SSD disks.
  wal-fsync-delay = "{{ influxdb_data_wal_fsync_delay }}"

  # The type of shard index to use for new shards.  The default is an in-memory index that is
  # recreated at startup.  A value of "tsi1" will use a disk based index that supports higher
  # cardinality datasets.
  index-version = "{{ influxdb_data_index_version }}"

  # Trace logging provides more verbose output around the tsm engine. Turning
  # this on can provide more useful output for debugging tsm engine issues.
  trace-logging-enabled = {{ influxdb_data_trace_logging_enabled | lower }}

  # Whether queries should be logged before execution. Very useful for troubleshooting, but will
  # log any sensitive data contained within a query.
  query-log-enabled = {{ influxdb_data_query_log_enabled | lower }}

  # Settings for the TSM engine

  # CacheMaxMemorySize is the maximum size a shard's cache can
  # reach before it starts rejecting writes.
  # Valid size suffixes are k, m, or g (case insensitive, 1024 = 1k).
  # Values without a size suffix are in bytes.
  cache-max-memory-size = "{{ influxdb_data_cache_max_memory_size }}"

  # CacheSnapshotMemorySize is the size at which the engine will
  # snapshot the cache and write it to a TSM file, freeing up memory
  # Valid size suffixes are k, m, or g (case insensitive, 1024 = 1k).
  # Values without a size suffix are in bytes.
  cache-snapshot-memory-size = "{{ influxdb_data_cache_snapshot_memory_size }}"

  # CacheSnapshotWriteColdDuration is the length of time at
  # which the engine will snapshot the cache and write it to
  # a new TSM file if the shard hasn't received writes or deletes
  cache-snapshot-write-cold-duration = "{{ influxdb_data_cache_snapshot_write_cold_duration }}"

  # CompactFullWriteColdDuration is the duration at which the engine
  # will compact all TSM files in a shard if it hasn't received a
  # write or delete
  compact-full-write-cold-duration = "{{ influxdb_data_compact_full_write_cold_duration }}"

  # The maximum number of concurrent full and level compactions that can run at one time.  A
  # value of 0 results in 50% of runtime.GOMAXPROCS(0) used at runtime.  Any number greater
  # than 0 limits compactions to that value.  This setting does not apply
  # to cache snapshotting.
  max-concurrent-compactions = {{ influxdb_data_max_concurrent_compactions }}

  # The threshold, in bytes, when an index write-ahead log file will compact
  # into an index file. Lower sizes will cause log files to be compacted more
  # quickly and result in lower heap usage at the expense of write throughput.
  # Higher sizes will be compacted less frequently, store more series in-memory,
  # and provide higher write throughput.
  # Valid size suffixes are k, m, or g (case insensitive, 1024 = 1k).
  # Values without a size suffix are in bytes.
  max-index-log-file-size = "{{ influxdb_data_max_index_log_file_size }}"

  # The maximum series allowed per database before writes are dropped.  This limit can prevent
  # high cardinality issues at the database level.  This limit can be disabled by setting it to
  # 0.
  max-series-per-database = {{ influxdb_data_max_series_per_database }}

  # The maximum number of tag values per tag that are allowed before writes are dropped.  This limit
  # can prevent high cardinality tag values from being written to a measurement.  This limit can be
  # disabled by setting it to 0.
  # max-values-per-tag = {{ influxdb_data_max_values_per_tag }}

  # If true, then the mmap advise value MADV_WILLNEED will be provided to the kernel with respect to
  # TSM files. This setting has been found to be problematic on some kernels, and defaults to off.
  # It might help users who have slow disks in some cases.
  tsm-use-madv-willneed = {{ influxdb_data_tsm_use_madv_willneed | lower }}

###
### [coordinator]
###
### Controls the clustering service configuration.
###

[coordinator]
  # The default time a write request will wait until a "timeout" error is returned to the caller.
  write-timeout = "{{ influxdb_coordinator_write_timeout }}"

  # The maximum number of concurrent queries allowed to be executing at one time.  If a query is
  # executed and exceeds this limit, an error is returned to the caller.  This limit can be disabled
  # by setting it to 0.
  max-concurrent-queries = {{ influxdb_coordinator_max_concurrent_queries }}

  # The maximum time a query will is allowed to execute before being killed by the system.  This limit
  # can help prevent run away queries.  Setting the value to 0 disables the limit.
  query-timeout = "{{ influxdb_coordinator_query_timeout }}"

  # The time threshold when a query will be logged as a slow query.  This limit can be set to help
  # discover slow or resource intensive queries.  Setting the value to 0 disables the slow query logging.
  log-queries-after = "{{ influxdb_coordinator_log_queries_after }}"

  # The maximum number of points a SELECT can process.  A value of 0 will make
  # the maximum point count unlimited.  This will only be checked every second so queries will not
  # be aborted immediately when hitting the limit.
  max-select-point = {{ influxdb_coordinator_max_select_point }}

  # The maximum number of series a SELECT can run.  A value of 0 will make the maximum series
  # count unlimited.
  max-select-series = {{ influxdb_coordinator_max_select_series }}

  # The maxium number of group by time bucket a SELECT can create.  A value of zero will max the maximum
  # number of buckets unlimited.
  max-select-buckets = {{ influxdb_coordinator_max_select_buckets }}

###
### [retention]
###
### Controls the enforcement of retention policies for evicting old data.
###

[retention]
  # Determines whether retention policy enforcement enabled.
  enabled = {{ influxdb_retention_enabled | lower }}

  # The interval of time when retention policy enforcement checks run.
  check-interval = "{{ influxdb_retention_check_interval }}"

###
### [shard-precreation]
###
### Controls the precreation of shards, so they are available before data arrives.
### Only shards that, after creation, will have both a start- and end-time in the
### future, will ever be created. Shards are never precreated that would be wholly
### or partially in the past.

[shard-precreation]
  # Determines whether shard pre-creation service is enabled.
  enabled = {{ influxdb_shard_precreation_enabled | lower }}

  # The interval of time when the check to pre-create new shards runs.
  check-interval = "{{ influxdb_shard_precreation_check_interval }}"

  # The default period ahead of the endtime of a shard group that its successor
  # group is created.
  advance-period = "{{ influxdb_shard_precreation_advance_period }}"

###
### Controls the system self-monitoring, statistics and diagnostics.
###
### The internal database for monitoring data is created automatically if
### if it does not already exist. The target retention within this database
### is called 'monitor' and is also created with a retention period of 7 days
### and a replication factor of 1, if it does not exist. In all cases the
### this retention policy is configured as the default for the database.

[monitor]
  # Whether to record statistics internally.
  store-enabled = {{ influxdb_monitor_store_enabled | lower }}

  # The destination database for recorded statistics
  store-database = "{{ influxdb_monitor_store_database }}"

  # The interval at which to record statistics
  store-interval = "{{ influxdb_monitor_store_interval }}"


###
### [http]
###
### Controls how the HTTP endpoints are configured. These are the primary
### mechanism for getting data into and out of InfluxDB.
###

[http]
  # Determines whether HTTP endpoint is enabled.
  enabled = {{ influxdb_http_enabled | lower }}

  # The bind address used by the HTTP service
  bind-address = "{{ influxdb_http_bind_address }}"

  # Determines whether user authentication is enabled over HTTP/HTTPS.
  auth-enabled = {{ influxdb_http_auth_enabled | lower }}

  # The default realm sent back when issuing a basic auth challenge.
  realm = "{{ influxdb_http_realm }}"

  # Determines whether HTTP request logging is enabled.
  log-enabled = {{ influxdb_http_log_enabled | lower }}

  # Determines whether the HTTP write request logs should be suppressed when the log is enabled.
  supress-write-log = {{ influxdb_http_suppress_write_log | lower }}

  # When HTTP request logging is enabled, this option specifies the path where
  # log entries should be written. If unspecified, the default is to write to stderr, which
  # intermingles HTTP logs with internal InfluxDB logging.
  #
  # If influxd is unable to access the specified path, it will log an error and fall back to writing
  # the request log to stderr.
  access-log-path = "{{ influxdb_http_access_log_path }}"

  # Determines whether detailed write logging is enabled.
  write-tracing = {{ influxdb_http_write_tracing | lower }}

  # Determines whether the pprof endpoint is enabled.  This endpoint is used for
  # troubleshooting and monitoring.
  pprof-enabled = {{ influxdb_http_pprof_enabled | lower }}

  # Enables a pprof endpoint that binds to localhost:6060 immediately on startup.
  # This is only needed to debug startup issues.
  debug-pprof-enabled = {{ influxdb_http_debug_pprof_enabled | lower}}

  # Determines whether HTTPS is enabled.
  https-enabled = {{ influxdb_http_https_enabled | lower }}

  # The SSL certificate to use when HTTPS is enabled.
  https-certificate = "{{ influxdb_http_https_certificate }}"

  # Use a separate private key location.
  https-private-key = "{{ influxdb_http_https_private_key }}"

  # The JWT auth shared secret to validate requests using JSON web tokens.
  shared-secret = "{{ influxdb_http_shared_secret }}"

  # The default chunk size for result sets that should be chunked.
  max-row-limit = {{ influxdb_http_max_row_limit }}

  # The maximum number of HTTP connections that may be open at once.  New connections that
  # would exceed this limit are dropped.  Setting this value to 0 disables the limit.
  max-connection-limit = {{ influxdb_http_max_connection_limit }}

  # Enable http service over unix domain socket
  unix-socket-enabled = {{ influxdb_http_unix_socket_enabled | lower }}

  # The path of the unix domain socket.
  bind-socket = "{{ influxdb_http_bind_socket }}"

  # The maximum size of a client request body, in bytes. Setting this value to 0 disables the limit.
  max-body-size = {{ influxdb_http_max_body_size }}

  # The maximum number of writes processed concurrently.
  # Setting this to 0 disables the limit.
  max-concurrent-write-limit = {{ influxdb_http_max_concurrent_write_limit }}

  # The maximum number of writes queued for processing.
  # Setting this to 0 disables the limit.
  max-enqueued-write-limit = {{ influxdb_http_max_enqueued_write_limit }}

  # The maximum duration for a write to wait in the queue to be processed.
  # Setting this to 0 or setting max-concurrent-write-limit to 0 disables the limit.
  enqueued-write-timeout = {{ influxdb_http_enqueued_write_timeout }}

###
### [ifql]
###
### Configures the ifql RPC API.
###

[ifql]
  # Determines whether the RPC service is enabled.
  enabled = {{ influxdb_ifql_enabled | lower }}

  # Determines whether additional logging is enabled.
  log-enabled = {{ influxdb_ifql_log_enabled | lower }}

  # The bind address used by the ifql RPC service.
  bind-address = "{{ influxdb_ifql_bind_address }}"

###
### [logging]
###
### Controls how the logger emits logs to the output.
###

[logging]
  # Determines which log encoder to use for logs. Available options
  # are auto, logfmt, and json. auto will use a more a more user-friendly
  # output format if the output terminal is a TTY, but the format is not as
  # easily machine-readable. When the output is a non-TTY, auto will use
  # logfmt.
  format = "{{ influxdb_logging_format }}"

  # Determines which level of logs will be emitted. The available levels
  # are error, warn, info, and debug. Logs that are equal to or above the
  # specified level will be emitted.
  level = "{{ influxdb_logging_level }}"

  # Suppresses the logo output that is printed when the program is started.
  # The logo is always suppressed if STDOUT is not a TTY.
  suppress-logo = {{ influxdb_logging_suppress_logo | lower }}

###
### [subscriber]
###
### Controls the subscriptions, which can be used to fork a copy of all data
### received by the InfluxDB host.
###

[subscriber]
  # Determines whether the subscriber service is enabled.
  enabled = {{ influxdb_subscriber_enabled | lower }}

  # The default timeout for HTTP writes to subscribers.
  http-timeout = "{{ influxdb_subscriber_http_timeout }}"

  # Allows insecure HTTPS connections to subscribers.  This is useful when testing with self-
  # signed certificates.
  insecure-skip-verify = {{ influxdb_subscriber_insecure_skip_verify | lower }}

  # The path to the PEM encoded CA certs file. If the empty string, the default system certs will be used
  ca-certs = "{{ influxdb_subscriber_ca_certs }}"

  # The number of writer goroutines processing the write channel.
  write-concurrency = {{ influxdb_subscriber_write_concurrency }}

  # The number of in-flight writes buffered in the write channel.
  write-buffer-size = {{ influxdb_subscriber_write_buffer_size }}


###
### [[graphite]]
###
### Controls one or many listeners for Graphite data.
###

[[graphite]]
  # Determines whether the graphite endpoint is enabled.
  enabled = {{ influxdb_graphite_enabled | lower }}
  database = "{{ influxdb_graphite_database }}"
  retention_policy = "{{ influxdb_graphite_retention_policy }}"
  bind-address = "{{ influxdb_graphite_bind_address }}"
  protocol = "{{ influxdb_graphite_protocol }}"
  consistency-level = "{{ influxdb_graphite_consistency_level }}"

  # These next lines control how batching works. You should have this enabled
  # otherwise you could get dropped metrics or poor performance. Batching
  # will buffer points in memory if you have many coming in.

  # Flush if this many points get buffered
  batch-size = {{ influxdb_graphite_batch_size }}

  # number of batches that may be pending in memory
  batch-pending = {{ influxdb_graphite_batch_pending }}

  # Flush at least this often even if we haven't hit buffer limit
  batch-timeout = "{{ influxdb_graphite_batch_timeout }}"

  # UDP Read buffer size, 0 means OS default. UDP listener will fail if set above OS max.
  udp-read-buffer = {{ influxdb_graphite_udp_read_buffer }}

  ### This string joins multiple matching 'measurement' values providing more control over the final measurement name.
  separator = "{{ influxdb_graphite_separator }}"

  ### Default tags that will be added to all metrics.  These can be overridden at the template level
  ### or by tags extracted from metric
  # tags = ["region=us-east", "zone=1c"]

  ### Each template line requires a template pattern.  It can have an optional
  ### filter before the template and separated by spaces.  It can also have optional extra
  ### tags following the template.  Multiple tags should be separated by commas and no spaces
  ### similar to the line protocol format.  There can be only one default template.
  # templates = [
  #   "*.app env.service.resource.measurement",
  #   # Default template
  #   "server.*",
  # ]

###
### [collectd]
###
### Controls one or many listeners for collectd data.
###

[[collectd]]
  enabled = {{ influxdb_collectd_enabled  | lower }}
  bind-address = "{{ influxdb_collectd_bind_address }}"
  database = "{{ influxdb_collectd_database }}"
  retention-policy = "{{ influxdb_collectd_retention_policy }}"

  # The collectd service supports either scanning a directory for multiple types
  # db files, or specifying a single db file.
  typesdb = "{{ influxdb_collectd_typesdb }}"

  security-level = "{{ influxdb_collectd_security_level }}"
  auth-file = "{{ influxdb_collectd_auth_file }}"

  # These next lines control how batching works. You should have this enabled
  # otherwise you could get dropped metrics or poor performance. Batching
  # will buffer points in memory if you have many coming in.

  # Flush if this many points get buffered
  batch-size = {{ influxdb_collectd_batch_size }}

  # number of batches that may be pending in memory
  batch-pending = {{ influxdb_collectd_batch_pending }}

  # Flush at least this often even if we haven't hit buffer limit
  batch-timeout = "{{ influxdb_collectd_batch_timeout }}"

  # UDP Read buffer size, 0 means OS default. UDP listener will fail if set above OS max.
  udp-read-buffer = {{ influxdb_collectd_udp_read_buffer }}

  # Multi-value plugins can be handled two ways.
  # "split" will parse and store the multi-value plugin data into separate measurements
  # "join" will parse and store the multi-value plugin as a single multi-value measurement.
  # "split" is the default behavior for backward compatability with previous versions of influxdb.
  parse-multivalue-plugin = "{{ influxdb_collectd_parse_multivalue_plugin }}"

###
### [opentsdb]
###
### Controls one or many listeners for OpenTSDB data.
###

[[opentsdb]]
  enabled = {{ influxdb_opentsdb_enabled | lower }}
  bind-address = "{{ influxdb_opentsdb_bind_address }}"
  database = "{{ influxdb_opentsdb_database }}"
  retention-policy = "{{ influxdb_opentsdb_retention_policy }}"
  consistency-level = "{{ influxdb_opentsdb_consistency_level }}"
  tls-enabled = {{ influxdb_opentsdb_tls_enabled | lower }}
  certificate = "{{ influxdb_opentsdb_certificate }}"

  # Log an error for every malformed point.
  log-point-errors = {{ influxdb_opentsdb_log_point_errors | lower }}

  # These next lines control how batching works. You should have this enabled
  # otherwise you could get dropped metrics or poor performance. Only points
  # metrics received over the telnet protocol undergo batching.

  # Flush if this many points get buffered
  batch-size = {{ influxdb_opentsdb_batch_size }}

  # Number of batches that may be pending in memory
  batch-pending = {{ influxdb_opentsdb_batch_pending }}

  # Flush at least this often even if we haven't hit buffer limit
  batch-timeout = "{{ influxdb_opentsdb_batch_timeout }}"

###
### [[udp]]
###
### Controls the listeners for InfluxDB line protocol data via UDP.
###

[[udp]]
  enabled = {{ influxdb_udp_enabled | lower }}
  bind-address = "{{ influxdb_udp_bind_address }}"
  database = "{{ influxdb_udp_database }}"
  retention-policy = "{{ influxdb_udp_retention_policy }}"

  # InfluxDB precision for timestamps on received points ("" or "n", "u", "ms", "s", "m", "h")
  precision = "{{ influxdb_udp_precision }}"

  # These next lines control how batching works. You should have this enabled
  # otherwise you could get dropped metrics or poor performance. Batching
  # will buffer points in memory if you have many coming in.

  # Flush if this many points get buffered
  batch-size = {{ influxdb_udp_batch_size }}

  # number of batches that may be pending in memory
  batch-pending = {{ influxdb_udp_batch_pending }}

  # Flush at least this often even if we haven't hit buffer limit
  batch-timeout = "{{ influxdb_udp_batch_timeout }}"

  # UDP Read buffer size, 0 means OS default. UDP listener will fail if set above OS max.
  read-buffer = {{ influxdb_udp_read_buffer }}

###
### [continuous_queries]
###
### Controls how continuous queries are run within InfluxDB.
###

[continuous_queries]
  # Determines whether the continuous query service is enabled.
  enabled = {{ influxdb_continious_queries_enabled | lower }}

  # Controls whether queries are logged when executed by the CQ service.
  log-enabled = {{ influxdb_continious_queries_log_enabled | lower }}

  # Controls whether queries are logged to the self-monitoring data store.
  query-stats-enabled = {{ influxdb_continious_queries_query_stats_enabled | lower }}

  # interval for how often continuous queries will be checked if they need to run
  run-interval = "{{ influxdb_continious_queries_run_interval }}"

###
### [tls]
###
### Global configuration settings for TLS in InfluxDB.
###

[tls]
  # Determines the available set of cipher suites. See https://golang.org/pkg/crypto/tls/#pkg-constants
  # for a list of available ciphers, which depends on the version of Go (use the query
  # SHOW DIAGNOSTICS to see the version of Go used to build InfluxDB). If not specified, uses
  # the default settings from Go's crypto/tls package.
  # ciphers = [
  #   "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305",
  #   "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
  # ]

  # Minimum version of the tls protocol that will be negotiated. If not specified, uses the
  # default settings from Go's crypto/tls package.
  # min-version = "tls1.2"

  # Maximum version of the tls protocol that will be negotiated. If not specified, uses the
  # default settings from Go's crypto/tls package.
  # max-version = "tls1.2"

